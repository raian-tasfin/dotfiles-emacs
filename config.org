#+TITLE: Emacs Config 
#+AUTHOR: Raian Tasfin
#+EMAIL: raian.csecu@gmail.com
#+OPTIONS: num:nil

To turn any feature on/off comment/uncomment the section. The key
binding for toggling org mode section comments is `C-;'.

* Table of Contents
  :PROPERTIES:
  :UNNUMBERED: t
  :TOC:      :include all :ignore this
  :END:

:CONTENTS:
- [[#major-modes][Major Modes]]
  - [[#org-mode][Org Mode]]
    - [[#org-num-mode][org-num-mode]]
    - [[#org-make-toc][org-make-toc]]
  - [[#c-mode][C Mode]]
    - [[#indentation][Indentation]]
- [[#default-emacs-options][Default Emacs Options]]
- [[#appearance][Appearance]]
  - [[#start-message][Start Message]]
  - [[#tool-bar][Tool Bar]]
  - [[#menu-bar][Menu Bar]]
  - [[#typeface-and-font][Typeface and Font]]
  - [[#line-numbering][Line Numbering]]
  - [[#theme][Theme]]
    - [[#modus-operandi-tinted][modus-operandi-tinted]]
  - [[#spaceline][Spaceline]]
- [[#editing][Editing]]
  - [[#default-indentation][Default Indentation]]
  - [[#small-default-configs][Small Default Configs]]
    - [[#auto-fill-mode][Auto Fill Mode]]
    - [[#electric-pair-mode][Electric Pair Mode]]
    - [[#fly-spell-enabled-by-default][Fly-Spell Enabled by Default]]
:END:

* Minor Modes
** Editing Related
*** Drag Stuff Mode
    :PROPERTIES:
    :CUSTOM_ID: drag-stuff-mode
    :END:
    
    This caused a bit of a headache. This minor mode interferes with
    org-mode. We choose to disable it on org mode.
**** Installation
     :PROPERTIES:
     :CUSTOM_ID: installation-0
     :END:
    #+BEGIN_SRC emacs-lisp
    (use-package drag-stuff
    :config
      (drag-stuff-global-mode 1)
      (drag-stuff-define-keys))
    #+END_SRC

**** Disabling On Org Mode
     #+BEGIN_SRC emacs-lisp
     (add-hook 'org-mode-hook (lambda () (drag-stuff-mode -1)))
     #+END_SRC
* Major Modes
  :PROPERTIES:
  :CUSTOM_ID: major-modes
  :END:
** Org Mode
   :PROPERTIES:
   :CUSTOM_ID: org-mode
   :END:
   Minor options for org mode.
*** org-num-mode
    :PROPERTIES:
    :CUSTOM_ID: org-num-mode
    :END:
    Show section numbers in org mode by default.
    #+BEGIN_SRC emacs-lisp
    (add-hook 'org-mode-hook #'org-num-mode)
    #+END_SRC
*** org-make-toc
    :PROPERTIES:
    :CUSTOM_ID: org-make-toc
    :END:
    This package requires dash
    #+BEGIN_SRC emacs-lisp
    (use-package org-make-toc
    :requires dash
    :init
      (setq org-make-toc-insert-custom-ids t))
    #+END_SRC

** C Mode
   :PROPERTIES:
   :CUSTOM_ID: c-mode
   :END:
*** Indentation
    :PROPERTIES:
    :CUSTOM_ID: indentation
    :END:
    #+BEGIN_SRC emacs-lisp
    (setq-default c-basic-offset 4)
    #+END_SRC
* Default Emacs Options
  :PROPERTIES:
  :CUSTOM_ID: default-emacs-options
  :END:
  #+BEGIN_SRC emacs-lisp
  (setq auto-save-file-name-transforms
    `((".*" ,temporary-file-directory t)))
  #+END_SRC

* Appearance
  :PROPERTIES:
  :CUSTOM_ID: appearance
  :END:
** Start Message
   :PROPERTIES:
   :CUSTOM_ID: start-message
   :END:
   Hide the starting message message
   
   #+BEGIN_SRC emacs-lisp
   (setq inhibit-startup-message t)
   #+END_SRC
** COMMENT Scratch Message
   For now I want the default scratch message to signal that emacs has
   been loaded successfully and we are on the scratch buffer.
   
   #+BEGIN_SRC emacs-lisp 
   (setq initial-scratch-message nil)
   #+END_SRC

** Tool Bar
   :PROPERTIES:
   :CUSTOM_ID: tool-bar
   :END:
   Hide graphic tool bar
   #+BEGIN_SRC emacs-lisp 
   (tool-bar-mode -1)
   #+END_SRC

** Menu Bar
   :PROPERTIES:
   :CUSTOM_ID: menu-bar
   :END:
   Hide graphic menu bar
   #+BEGIN_SRC emacs-lisp 
   (menu-bar-mode -1)
   #+END_SRC
   
** Typeface and Font
   :PROPERTIES:
   :CUSTOM_ID: typeface-and-font
   :END:
   #+BEGIN_SRC emacs-lisp
   (set-frame-font "Fira Code-11.5" nil t)
   #+END_SRC

** Line Numbering
   :PROPERTIES:
   :CUSTOM_ID: line-numbering
   :END:
   #+BEGIN_SRC emacs-lisp
   (setq display-line-numbers-type 'relative)
   (global-display-line-numbers-mode)
   #+END_SRC

** Theme
   :PROPERTIES:
   :CUSTOM_ID: theme
   :END:
   To enable or disable any option, comment or uncomment that section
   respectively. The current shortcut for toggling comments is C-;
   . For confirmation, see 

*** modus-operandi-tinted
    :PROPERTIES:
    :CUSTOM_ID: modus-operandi-tinted
    :END:

    A modus light tinted theme. The default right now.
    #+BEGIN_SRC emacs-lisp
    (use-package modus-themes
      :config
      (load-theme 'modus-operandi-tinted t))
    #+End_SRC

*** COMMENT modus-vivendi-tinted
    A modus light tinted theme. The default right now.
    #+BEGIN_SRC emacs-lisp
    (use-package modus-themes
      :config
      (load-theme 'modus-vivendi-tinted t))
    #+END_SRC

*** COMMENT base16-gruvbox-dark-medium
    Preferred default dark theme
    #+BEGIN_SRC emacs-lisp
    (use-package base16-theme
      :config
      (load-theme 'base16-gruvbox-dark-medium t))
    #+END_SRC

*** COMMENT leuven
    Reliable light theme. Suitable in screens where modus-operandi
    tinted is a bit too warm.
    #+BEGIN_SRC emacs-lisp
    (use-package leuven-theme
      :config
      (load-theme 'leuven t))
    #+END_SRC

   To Use any of the themes, I have to just uncomment the config line
   of it and comment the configs for other themes.

** Spaceline
   :PROPERTIES:
   :CUSTOM_ID: spaceline
   :END:
   Ripped off the internet 

   #+BEGIN_SRC emacs-lisp
   (use-package spaceline
     :config
     (spaceline-spacemacs-theme)
     (spaceline-toggle-minor-modes-off)
     (spaceline-toggle-buffer-encoding-off)
     (spaceline-toggle-buffer-encoding-abbrev-off)
     (setq spaceline-highlight-face-func 
       'spaceline-highlight-face-evil-state)
     (spaceline-define-segment line-column
       "The current line and column numbers."
       "l:%l c:%2c")
     (spaceline-define-segment time
       "The current time."
       (format-time-string "%H:%M"))
     (spaceline-define-segment date
       "The current date."
       (format-time-string "%h %d"))
     (spaceline-toggle-time-on)
     (spaceline-emacs-theme 'date 'time))
   #+END_SRC

* Editing
  :PROPERTIES:
  :CUSTOM_ID: editing
  :END:
** Default Indentation
   :PROPERTIES:
   :CUSTOM_ID: default-indentation
   :END:
   #+BEGIN_SRC emacs-lisp
   (setq default-tab-width 4)
   #+END_SRC
** Small Default Configs
   :PROPERTIES:
   :CUSTOM_ID: small-default-configs
   :END:
*** Auto Fill Mode
    :PROPERTIES:
    :CUSTOM_ID: auto-fill-mode
    :END:
    #+BEGIN_SRC emacs-lisp
    (setq-default auto-fill-function 'do-auto-fill)
    #+END_SRC
*** Electric Pair Mode
    :PROPERTIES:
    :CUSTOM_ID: electric-pair-mode
    :END:
    Match parenthesis.
    #+BEGIN_SRC emacs-lisp
    (electric-pair-mode 1)
    #+END_SRC
*** Fly-Spell Enabled by Default
    :PROPERTIES:
    :CUSTOM_ID: fly-spell-enabled-by-default
    :END:
    #+BEGIN_SRC emacs-lisp
    (dolist (hook '(text-mode-hook))
      (add-hook hook (lambda () (flyspell-mode 1))))
    #+END_SRC
