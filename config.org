#+TITLE: Emacs Config 
#+AUTHOR: Raian Tasfin
#+EMAIL: raian.csecu@gmail.com
#+OPTIONS: num:nil

To turn any feature on/off comment/uncomment the section. The key
binding for toggling org mode section comments is `C-;'.

* Table of Contents                                                     :TOC:
- [[#minor-editing-modes][Minor Editing Modes]]
  - [[#drag-stuff-mode][Drag Stuff Mode]]
  - [[#evil-mode][Evil Mode]]
  - [[#multiple-cursors][Multiple Cursors]]
  - [[#title-case][Title case]]
- [[#auto-completion-and-lsp][Auto-completion and LSP]]
  - [[#installing-lsp][Installing LSP]]
  - [[#company-mode][company-mode]]
  - [[#company-box][company-box]]
  - [[#lsp-ui][lsp-ui]]
  - [[#snippets][Snippets]]
- [[#major-modes][Major Modes]]
  - [[#org-mode][Org Mode]]
  - [[#c-mode][C Mode]]
- [[#default-emacs-options][Default Emacs Options]]
- [[#appearance][Appearance]]
  - [[#start-message][Start Message]]
  - [[#tool-bar][Tool Bar]]
  - [[#menu-bar][Menu Bar]]
  - [[#typeface-and-font][Typeface and Font]]
  - [[#line-numbering][Line Numbering]]
  - [[#theme][Theme]]
  - [[#spaceline][Spaceline]]
- [[#editing][Editing]]
  - [[#default-indentation][Default Indentation]]
  - [[#small-default-configs][Small Default Configs]]

* Minor Editing Modes
** Drag Stuff Mode
   This caused a bit of a headache. This minor mode interferes with
   org-mode. We choose to disable it on org mode.

*** Installation
    #+BEGIN_SRC emacs-lisp
    (use-package drag-stuff
      :config
      (drag-stuff-global-mode 1)
      (drag-stuff-define-keys))
    #+END_SRC

*** Disabling On Org Mode
    #+BEGIN_SRC emacs-lisp
    (add-hook 'org-mode-hook (lambda () (drag-stuff-mode -1)))
    #+END_SRC

** Evil Mode
   Issues to fix
   1. Evil mode overrides yanking and killing key-bindings of
      emacs. Could not override them successfully. Setting new
      keybindings for yank, yanks last kill character by character.

*** Basic Installation
    #+BEGIN_SRC emacs-lisp
    (use-package evil
      :init
      (evil-mode 1))
    #+END_SRC
    
** Multiple Cursors
   With bar cursors, the extra cursors are not visible. To make it
   visible the extra options are necessary. Although, I still cannot
   find a way to make the extra cursors thick.  
   
   #+BEGIN_SRC emacs-lisp
   (use-package multiple-cursors
     :init
     (setq-default cursor-type '(bar . 2.5))
     (custom-set-faces
      '(mc/cursor-bar-face 
        ((t(:background "brown"))))))
   #+END_SRC

*** Mark Next and Previous Like This
    #+BEGIN_SRC emacs-lisp
    (use-package multiple-cursors
      :config
      (global-set-key (kbd "C->") 'mc/mark-next-like-this)
      (global-set-key (kbd "C-<") 'mc/mark-previous-like-this))
    #+END_SRC

*** Mark All Like This
    #+BEGIN_SRC emacs-lisp
    (use-package multiple-cursors
      :config
      (global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this))
    #+END_SRC

** Title case
   #+BEGIN_SRC emacs-lisp
   (use-package titlecase)
   #+END_SRC

* Auto-completion and LSP
** Installing LSP
   Here we install lsp and disable annoying auto-formatting. 
   #+BEGIN_SRC emacs-lisp
   (use-package lsp-mode
   :config
   (setq lsp-enable-on-type-formatting nil)
   (setq lsp-completion-provider :none))
   #+END_SRC

** company-mode
   Integrating with lsp.
   #+BEGIN_SRC emacs-lisp
   (use-package company
     :after lsp-mode
     :hook (prog-mode . company-mode)
     :bind (:map company-active-map
		 ("<tab>" . company-complete-selection))
     (:map lsp-mode-map
           ("<tab>" . company-indent-or-complete-common))
     :custom
     (company-minimum-prefix-length 1)
     (company-idle-delay 0.0))
   #+END_SRC

** company-box
   #+BEGIN_SRC emacs-lsip
   (use-package company-box
   :hook (company-mode . company-box-mode))
   #+END_SRC

** lsp-ui
   #+BEGIN_SRC emacs-lisp
   (use-package lsp-ui
   :hook (lsp-mode . lsp-ui-mode))
   #+END_SRC

** Snippets

* Major Modes
** Org Mode
   Minor options for org mode.
*** org-num-mode
    Show section numbers in org mode by default.

    #+BEGIN_SRC emacs-lisp
    (add-hook 'org-mode-hook #'org-num-mode)
    #+END_SRC

*** toc-org
    #+BEGIN_SRC emacs-lisp
    (use-package toc-org
      :config
      (add-hook 'org-mode-hook 'toc-org-mode))
    #+END_SRC

** C Mode
*** Indentation
    :PROPERTIES:
    :CUSTOM_ID: indentation
    :END:
    #+BEGIN_SRC emacs-lisp
    (setq-default c-basic-offset 4)
    #+END_SRC
* Default Emacs Options
  #+BEGIN_SRC emacs-lisp
  (setq auto-save-file-name-transforms
	`((".*" ,temporary-file-directory t)))
  #+END_SRC

* Appearance
** Start Message
   Hide the starting message message
   
   #+BEGIN_SRC emacs-lisp
   (setq inhibit-startup-message t)
   #+END_SRC

** COMMENT Scratch Message
   For now I want the default scratch message to signal that emacs has
   been loaded successfully and we are on the scratch buffer.
   
   #+BEGIN_SRC emacs-lisp 
   (setq initial-scratch-message nil)
   #+END_SRC

** Tool Bar
   Hide graphic tool bar

   #+BEGIN_SRC emacs-lisp 
   (tool-bar-mode -1)
   #+END_SRC

** Menu Bar
   Hide graphic menu bar

   #+BEGIN_SRC emacs-lisp 
   (menu-bar-mode -1)
   #+END_SRC
   
** Typeface and Font
   #+BEGIN_SRC emacs-lisp
   (set-frame-font "Fira Code-11.5" nil t)
   #+END_SRC

** Line Numbering
   #+BEGIN_SRC emacs-lisp
   (setq display-line-numbers-type 'relative)
   (global-display-line-numbers-mode)
   #+END_SRC

** Theme
   To enable or disable any option, comment or uncomment that section
   respectively. The current shortcut for toggling comments is C-;
   . For confirmation, see 

*** modus-operandi-tinted
    A modus light tinted theme. The default right now.
    #+BEGIN_SRC emacs-lisp
    (use-package modus-themes
      :config
      (load-theme 'modus-operandi-tinted t))
    #+End_SRC

*** COMMENT modus-vivendi-tinted
    A modus light tinted theme. The default right now.

    #+BEGIN_SRC emacs-lisp
    (use-package modus-themes
      :config
      (load-theme 'modus-vivendi-tinted t))
    #+END_SRC

*** COMMENT base16-gruvbox-dark-medium
    Preferred default dark theme

    #+BEGIN_SRC emacs-lisp
    (use-package base16-theme
      :config
      (load-theme 'base16-gruvbox-dark-medium t))
    #+END_SRC

*** COMMENT leuven
    Reliable light theme. Suitable in screens where modus-operandi
    tinted is a bit too warm.
    #+BEGIN_SRC emacs-lisp
    (use-package leuven-theme
      :config
      (load-theme 'leuven t))
    #+END_SRC

   To Use any of the themes, I have to just uncomment the config line
   of it and comment the configs for other themes.

** Spaceline
   Ripped off the internet 

   #+BEGIN_SRC emacs-lisp
   (use-package spaceline
     :config
     (spaceline-spacemacs-theme)
     (spaceline-toggle-minor-modes-off)
     (spaceline-toggle-buffer-encoding-off)
     (spaceline-toggle-buffer-encoding-abbrev-off)
     (setq spaceline-highlight-face-func 
	   'spaceline-highlight-face-evil-state)
     (spaceline-define-segment line-column
       "The current line and column numbers."
       "l:%l c:%2c")
     (spaceline-define-segment time
       "The current time."
       (format-time-string "%H:%M"))
     (spaceline-define-segment date
       "The current date."
       (format-time-string "%h %d"))
     (spaceline-toggle-time-on)
     (spaceline-emacs-theme 'date 'time))
   #+END_SRC
   
* Editing
** Default Indentation
   #+BEGIN_SRC emacs-lisp
   (setq default-tab-width 4)
   #+END_SRC
** Small Default Configs

*** Auto Fill Mode
    #+BEGIN_SRC emacs-lisp
    (setq-default auto-fill-function 'do-auto-fill)
    #+END_SRC

*** Electric Pair Mode
    Match parenthesis.
    #+BEGIN_SRC emacs-lisp
    (electric-pair-mode 1)
    #+END_SRC

*** Fly-Spell Enabled by Default
    #+BEGIN_SRC emacs-lisp
    (dolist (hook '(text-mode-hook))
      (add-hook hook (lambda () (flyspell-mode 1))))
    #+END_SRC

