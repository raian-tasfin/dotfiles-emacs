#+TITLE: Emacs Config
#+AUTHOR: Raian Tasfin
#+EMAIL: raian.csecu@gmail.com
#+OPTIONS: num:nil

To turn any feature on/off comment/uncomment the section. The key
binding for toggling org mode section comments is `C-;'.

* Table of Contents                                                     :TOC:
- [[#major-modes][Major Modes]]
  - [[#org-mode][Org Mode]]
  - [[#c-mode][C Mode]]
  - [[#java][Java]]
  - [[#makefile][Makefile]]
  - [[#latex-mode][LaTeX Mode]]
- [[#minor-editing-modes][Minor Editing Modes]]
  - [[#drag-stuff-mode][Drag Stuff Mode]]
  - [[#evil-mode][Evil Mode]]
  - [[#multiple-cursors][Multiple Cursors]]
  - [[#title-case][Title case]]
  - [[#helm][Helm]]
  - [[#whitspace-package][Whitspace Package]]
- [[#auto-completion-and-lsp][Auto-completion and LSP]]
  - [[#installing-lsp][Installing LSP]]
  - [[#company-mode][company-mode]]
  - [[#company-box][company-box]]
  - [[#lsp-for-latex-lsp-latex][LSP for LaTeX lsp-latex]]
  - [[#lsp-ui][lsp-ui]]
  - [[#snippets][Snippets]]
  - [[#yasnippet][Yasnippet]]
  - [[#flycheck][Flycheck]]
- [[#default-emacs-options][Default Emacs Options]]
  - [[#temporary-file-directory][Temporary File Directory]]
  - [[#backup-settings][Backup Settings]]
- [[#appearance][Appearance]]
  - [[#start-message][Start Message]]
  - [[#tool-bar][Tool Bar]]
  - [[#menu-bar][Menu Bar]]
  - [[#typeface-and-font][Typeface and Font]]
  - [[#line-numbering][Line Numbering]]
  - [[#theme][Theme]]
  - [[#spaceline][Spaceline]]
- [[#editing][Editing]]
  - [[#default-indentation][Default Indentation]]
  - [[#small-default-configs][Small Default Configs]]

* Major Modes
** Org Mode
   Minor options for org mode.
*** org-num-mode
    Show section numbers in org mode by default.

    #+BEGIN_SRC emacs-lisp
    (add-hook 'org-mode-hook #'org-num-mode)
    #+END_SRC

*** toc-org
    #+BEGIN_SRC emacs-lisp
    (use-package toc-org
      :config
      (add-hook 'org-mode-hook 'toc-org-mode))
    #+END_SRC

** C Mode
*** Indentation
    :PROPERTIES:
    :CUSTOM_ID: indentation
    :END:
    #+BEGIN_SRC emacs-lisp
    (setq-default c-basic-offset 4)
    #+END_SRC
** Java
   #+BEGIN_SRC emacs-lisp
   (use-package lsp-java
     :config
     (add-hook 'java-mode-hook #'lsp))
   #+END_SRC

** Makefile

*** Hook LSP
    #+BEGIN_SRC emacs-lisp
    (add-hook 'makefile-gmake-mode-hook #'lsp)
    #+END_SRC

*** Cleanup
    #+BEGIN_SRC emacs-lisp
    (setq makefile-cleanup-continuations t)
    #+END_SRC


** LaTeX Mode

*** Treat Certain Environments as Math
    #+BEGIN_SRC emacs-lisp
    (add-hook 'LaTeX-mode-hook 'add-my-latex-environments)
    (defun add-my-latex-environments ()
    (LaTeX-add-environments
    '("align" LaTeX-env-label)
    '("align*" LaTeX-env-label)
    ))
    #+END_SRC

* Minor Editing Modes
** Drag Stuff Mode
   This caused a bit of a headache. This minor mode interferes with
   org-mode. We choose to disable it on org mode.

*** Installation
    #+BEGIN_SRC emacs-lisp
    (use-package drag-stuff
      :config
      (drag-stuff-global-mode 1)
      (drag-stuff-define-keys))
    #+END_SRC

*** Disabling On Org Mode
    #+BEGIN_SRC emacs-lisp
    (add-hook 'org-mode-hook (lambda () (drag-stuff-mode -1)))
    #+END_SRC

** TODO Evil Mode
   Issues to fix
   1. Evil mode overrides yanking and killing key-bindings of
      emacs. Could not override them successfully. Setting new
      keybindings for yank, yanks last kill character by character.

*** Basic Installation
    #+BEGIN_SRC emacs-lisp
    (use-package evil
      :init
      (evil-mode 1))
    #+END_SRC

** Multiple Cursors
   With bar cursors, the extra cursors are not visible. To make it
   visible the extra options are necessary. Although, I still cannot
   find a way to make the extra cursors thick.

   #+BEGIN_SRC emacs-lisp
   (use-package multiple-cursors
     :init
     (setq-default cursor-type '(bar . 2.5))
     (custom-set-faces
      '(mc/cursor-bar-face
        ((t(:background "brown"))))))
   #+END_SRC

*** Mark Next and Previous Like This
    #+BEGIN_SRC emacs-lisp
    (use-package multiple-cursors
      :config
      (global-set-key (kbd "C->") 'mc/mark-next-like-this)
      (global-set-key (kbd "C-<") 'mc/mark-previous-like-this))
    #+END_SRC

*** Mark All Like This
    #+BEGIN_SRC emacs-lisp
    (use-package multiple-cursors
      :config
      (global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this))
    #+END_SRC

** Title case
   #+BEGIN_SRC emacs-lisp
   (use-package titlecase)
   #+END_SRC

** Helm
   #+BEGIN_SRC emacs-lisp
   (use-package helm
     :ensure t
     :config
     (global-set-key (kbd "M-x") #'helm-M-x)
     (global-set-key (kbd "C-x r b") #'helm-filtered-bookmarks)
     (global-set-key (kbd "C-x C-f") #'helm-find-files)
     (define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action)
     (helm-mode 1))
   #+END_SRC

** Whitspace Package

*** Ethan Whitspace Setup
   #+BEGIN_SRC emacs-lisp
   (use-package ethan-wspace
     :ensure t
     :config
     (setq mode-require-final-newline nil)
     (global-ethan-wspace-mode 1))
   #+END_SRC

*** Ethan Cleanup Spaces on Save
    #+BEGIN_SRC emacs-lisp
    (add-hook 'after-save-hook #'ethan-wspace-clean-all)
    #+END_SRC

* Auto-completion and LSP
** Installing LSP
   Here we install lsp and disable annoying auto-formatting.
   #+BEGIN_SRC emacs-lisp
   (use-package lsp-mode
     :config
     (setq lsp-enable-on-type-formatting nil)
     ;; (setq lsp-completion-provider :capf)
     (add-hook 'prog-mode-hook #'lsp)
     (add-hook 'prog-mode-hook #'lsp-ui-mode)
     )
   #+END_SRC

** company-mode
   Integrating with lsp and yasnippet. Company does not automatically
   show yasnippet entries on tab. The shortcut for that is C-c y.
   #+BEGIN_SRC emacs-lisp
   (use-package company
     :init (global-set-key (kbd "C-<tab>") 'company-yasnippet)
     :after lsp-mode
     :config (global-company-mode)
     :hook (prog-mode . company-mode)
     :bind (:map company-active-map
		 ("<tab>" . company-complete-selection)
		 (:map lsp-mode-map
		       ("<tab>" . company-indent-or-complete-common)))
     :custom
     (company-minimum-prefix-length 1)
     (company-idle-delay 0)
     (company-dabrev-downcase 0)
     (add-hook 'after-init-hook 'global-company-mode))
   #+END_SRC

** company-box
   #+BEGIN_SRC emacs-lsip
   (use-package company-box
   :hook (company-mode . company-box-mode))
   #+END_SRC

** LSP for LaTeX lsp-latex
   #+BEGIN_SRC emacs-lisp
   (use-package lsp-latex
     :config
     (with-eval-after-load "tex-mode"
       (add-hook 'tex-mode-hook 'lsp)
       (add-hook 'latex-mode-hook 'lsp))
     (with-eval-after-load "yatex"
       (add-hook 'yatex-mode-hook 'lsp))
     (with-eval-after-load "bibtex"
       (add-hook 'bibtex-mode-hook 'lsp)))
   #+END_SRC

** lsp-ui
   #+BEGIN_SRC emacs-lisp
     (use-package lsp-ui
       :hook (lsp-mode . lsp-ui-mode)
       :config
       (setq lsp-enable-symbol-highlighting 1)
       (setq lsp-ui-doc-enable 1)
       ;; (setq lsp-ui-doc-show-with-cursor 1)
       (setq lsp-ui-doc-show-with-mouse 1)
       (setq lsp-lens-enable 1)
       (setq lsp-headerline-breadcrumb-enable 1)
       (setq lsp-ui-sideline-enable 1)
       ;; (setq lsp-ui-sideline-show-code-actions 1)
       (setq lsp-ui-sideline-enable 1)
       (setq lsp-ui-sideline-show-hover 1)
       ;; (setq lsp-modeline-code-actions-enable 1)
       (setq lsp-ui-sideline-enable 1)
       (setq lsp-ui-sideline-show-diagnostics 1)
       (setq lsp-eldoc-enable-hover 1)
       (setq lsp-modeline-diagnostics-enable 1)
       ;; (setq lsp-signature-auto-activate 1)
       ;; (setq lsp-signature-render-documentation 1)
       ;; (setq lsp-completion-show-detail 1)
       ;; (setq lsp-completion-show-kind 1)
       )
   #+END_SRC

** Snippets

** TODO Yasnippet
   May have trouble with lsp integration

*** Installation
    #+BEGIN_SRC emacs-lisp
    (use-package yasnippet
      :config
      (yas-global-mode 1)
      (setq yas-snippet-dirs '("~/.emacs.d/snippets")))
    #+End_SRC

** Flycheck
   Setup flycheck
    #+BEGIN_SRC emacs-lisp
    (use-package flycheck)
    (require 'flycheck)
    (global-flycheck-mode)
    #+End_SRC

* Default Emacs Options
** Temporary File Directory
   #+BEGIN_SRC emacs-lisp
   (setq auto-save-file-name-transforms
	 `((".*" ,temporary-file-directory t)))
   #+END_SRC
** Backup Settings
   #+BEGIN_SRC emacs-lisp
   (setq
   backup-by-copying t      ; don't clobber symlinks
   backup-directory-alist
    '(("." . "~/.saves/"))    ; don't litter my fs tree
   delete-old-versions t
   kept-new-versions 6
   kept-old-versions 2
   version-control nil)       ; don't versioned backups
   #+END_SRC
* Appearance
** Start Message
   Hide the starting message message

   #+BEGIN_SRC emacs-lisp
   (setq inhibit-startup-message t)
   #+END_SRC

** COMMENT Scratch Message
   For now I want the default scratch message to signal that emacs has
   been loaded successfully and we are on the scratch buffer.

   #+BEGIN_SRC emacs-lisp
   (setq initial-scratch-message nil)
   #+END_SRC

** Tool Bar
   Hide graphic tool bar

   #+BEGIN_SRC emacs-lisp
   (tool-bar-mode -1)
   #+END_SRC

** Menu Bar
   Hide graphic menu bar

   #+BEGIN_SRC emacs-lisp
   (menu-bar-mode -1)
   #+END_SRC

** Typeface and Font
   #+BEGIN_SRC emacs-lisp
   (set-frame-font "Fira Code-11.5" nil t)
   #+END_SRC

** Line Numbering
   #+BEGIN_SRC emacs-lisp
   (setq display-line-numbers-type 'relative)
   (global-display-line-numbers-mode)
   #+END_SRC

** Theme
   To enable or disable any option, comment or uncomment that section
   respectively. The current shortcut for toggling comments is C-;
   . For confirmation, see

*** modus-operandi-tinted
    A modus light tinted theme. The default right now.
    #+BEGIN_SRC emacs-lisp
    (use-package modus-themes
      :config
      (load-theme 'modus-operandi-tinted t))
    #+End_SRC

*** COMMENT modus-vivendi-tinted
    A modus light tinted theme. The default right now.

    #+BEGIN_SRC emacs-lisp
    (use-package modus-themes
      :config
      (load-theme 'modus-vivendi-tinted t))
    #+END_SRC

*** COMMENT base16-gruvbox-dark-medium
    Preferred default dark theme

    #+BEGIN_SRC emacs-lisp
    (use-package base16-theme
      :config
      (load-theme 'base16-gruvbox-dark-medium t))
    #+END_SRC

*** COMMENT leuven
    Reliable light theme. Suitable in screens where modus-operandi
    tinted is a bit too warm.
    #+BEGIN_SRC emacs-lisp
    (use-package leuven-theme
      :config
      (load-theme 'leuven t))
    #+END_SRC

   To Use any of the themes, I have to just uncomment the config line
   of it and comment the configs for other themes.

** Spaceline
   Ripped off the internet

   #+BEGIN_SRC emacs-lisp
   (use-package spaceline
     :config
     (spaceline-spacemacs-theme)
     (spaceline-toggle-minor-modes-off)
     (spaceline-toggle-buffer-encoding-off)
     (spaceline-toggle-buffer-encoding-abbrev-off)
     (setq spaceline-highlight-face-func
	   'spaceline-highlight-face-evil-state)
     (spaceline-define-segment line-column
       "The current line and column numbers."
       "l:%l c:%2c")
     (spaceline-define-segment time
       "The current time."
       (format-time-string "%H:%M"))
     (spaceline-define-segment date
       "The current date."
       (format-time-string "%h %d"))
     (spaceline-toggle-time-on)
     (spaceline-emacs-theme 'date 'time))
   #+END_SRC

* Editing
** Default Indentation
   #+BEGIN_SRC emacs-lisp
   (setq default-tab-width 4)
   #+END_SRC
** Small Default Configs

*** Auto Fill Mode
    #+BEGIN_SRC emacs-lisp
    (setq-default auto-fill-function 'do-auto-fill)
    #+END_SRC

*** commenting line
    #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "M-;") 'comment-line)
    #+END_SRC

*** Electric Pair Mode
    Match parenthesis.
    #+BEGIN_SRC emacs-lisp
    (electric-pair-mode 1)
    #+END_SRC

*** Fly-Spell Enabled by Default
    #+BEGIN_SRC emacs-lisp
    (dolist (hook '(text-mode-hook))
      (add-hook hook (lambda () (flyspell-mode 1))))
    #+END_SRC
